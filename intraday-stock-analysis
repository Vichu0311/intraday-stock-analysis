import yfinance as yf
import pandas as pd
import numpy as np
import ta
import streamlit as st
import plotly.graph_objects as go

def fetch_stock_data(stock_symbol, period='1d', interval='5m'):
    """Fetch intraday stock data from Yahoo Finance"""
    stock_data = yf.download(stock_symbol, period=period, interval=interval)
    return stock_data

def calculate_indicators(data):
    """Calculate RSI, EMA, and MACD indicators for intraday trading"""
    data['RSI'] = ta.momentum.RSIIndicator(data['Close'], window=14).rsi()
    data['EMA_9'] = ta.trend.ema_indicator(data['Close'], window=9)
    data['EMA_21'] = ta.trend.ema_indicator(data['Close'], window=21)
    macd = ta.trend.MACD(data['Close'])
    data['MACD'] = macd.macd()
    data['MACD_Signal'] = macd.macd_signal()
    return data

def generate_intraday_signals(data):
    """Generate Buy and Sell signals based on intraday indicators"""
    buy_signals = []
    sell_signals = []
    
    for i in range(len(data)):
        if data['RSI'][i] < 30 and data['EMA_9'][i] > data['EMA_21'][i] and data['MACD'][i] > data['MACD_Signal'][i]:
            buy_signals.append(data['Close'][i])
            sell_signals.append(np.nan)
        elif data['RSI'][i] > 70 and data['EMA_9'][i] < data['EMA_21'][i] and data['MACD'][i] < data['MACD_Signal'][i]:
            sell_signals.append(data['Close'][i])
            buy_signals.append(np.nan)
        else:
            buy_signals.append(np.nan)
            sell_signals.append(np.nan)
    
    data['Buy_Signal'] = buy_signals
    data['Sell_Signal'] = sell_signals
    return data

def plot_stock_chart(data, stock_symbol):
    """Plot stock price with Buy/Sell signals using Plotly"""
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=data.index, y=data['Close'], mode='lines', name='Close Price'))
    fig.add_trace(go.Scatter(x=data.index, y=data['Buy_Signal'], mode='markers', name='Buy Signal', marker=dict(color='green', size=10, symbol='triangle-up')))
    fig.add_trace(go.Scatter(x=data.index, y=data['Sell_Signal'], mode='markers', name='Sell Signal', marker=dict(color='red', size=10, symbol='triangle-down')))
    
    fig.update_layout(title=f'Intraday Stock Analysis: {stock_symbol}', xaxis_title='Time', yaxis_title='Price', template='plotly_dark')
    st.plotly_chart(fig)

def main():
    st.set_page_config(page_title="Intraday Stock Analysis", layout="wide")
    st.title("ðŸ“ˆ Intraday Stock Analysis and Buy/Sell Signal Indication")
    
    stock_symbol = st.text_input("Enter Stock Symbol (e.g., RELIANCE.NS):")
    if stock_symbol:
        with st.spinner('Fetching and analyzing stock data...'):
            data = fetch_stock_data(stock_symbol)
            data = calculate_indicators(data)
            data = generate_intraday_signals(data)
        
        st.subheader("Stock Data (Latest 5 Entries)")
        st.dataframe(data[['Close', 'RSI', 'EMA_9', 'EMA_21', 'MACD', 'MACD_Signal', 'Buy_Signal', 'Sell_Signal']].tail())
        
        st.subheader("Buy/Sell Signals")
        buy_signals = data[['Close', 'Buy_Signal', 'Sell_Signal']].dropna()
        st.dataframe(buy_signals.tail())
        
        st.subheader("Stock Price Chart with Signals")
        plot_stock_chart(data, stock_symbol)

if __name__ == "__main__":
    main()
